using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Windows.ApplicationModel.Calls.Background;

namespace Html_Css
{
    class HtmlCssData
    {
       readonly StringBuilder sb = new StringBuilder();
        public HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
        public HtmlAgilityPack.HtmlDocument GetHtmlStructure { get { return doc; } }
        public HtmlCssData()
        {
            sb.AppendLine("<!DOCTYPE html>");
            sb.AppendLine("<html>");
            doc.LoadHtml(sb.ToString());
            HtmlAgilityPack.HtmlNode[] root = doc.DocumentNode.Descendants().ToArray();

            HtmlAgilityPack.HtmlNode head = doc.CreateElement("head");
            HtmlAgilityPack.HtmlNode body = doc.CreateElement("body");

            root[2].AppendChild(head);

            root[2].AppendChild(body);
            doc.OptionFixNestedTags = true;

        }

    }
    class CssPropertiesList
    {
        public List<string> properties = new List<string>();
        public List<string> CssProp { get { return properties; } }
        public CssPropertiesList()
        {
            properties.AddRange(new List<string>()
                {
                "align-content",
                "align-items",
                "align-self",
                "all",
                "animation" ,
"animation delay" ,
"animation-direction" ,
"animation-duration" ,
"animation-fill-mode" ,
"animation-iteration-count" ,
"animation-name" ,
"animation-play-state" ,
"animation-timing-function" ,
"backface-visibility",
"background" ,
"background-attachment" ,
"background-blend-mode",
"background-clip" ,
"background-color" ,
"background-image" ,
"background-origin" ,
"background-position" ,
"background-position-x" ,
"background-position-y" ,
"background-repeat" ,
"background-size" ,
"border" ,
"border-style" ,
"border-width" ,
"border-color" ,
"border-bottom" ,
"border-bottom-color" ,
"border-bottom-left-radius" ,
"border-bottom-right-radius" ,
"border-bottom-style" ,
"border-bottom-width" ,
"border-collapse" ,
"border-image" ,
"border-image-outset",
"border-image-repeat",
"border-image-slice	",
"border-image-source",
"border-image-width",
"border-left" ,
"border-left-color" ,
"border-left-style" ,
"border-left-width" ,
"border-radius" ,
"border-right" ,
"border-right-color" ,
"border-right-style" ,
"border-right-width" ,
"border-spacing" ,
"border-top" ,
"border-top-color" ,
"border-top-left-radius" ,
"border-top-right-radius" ,
"border-top-style" ,
"border-top-width" ,
"bottom" ,
"box-decoration-break",
"box-shadow" ,
"box-sizing" ,
"break-after",
"break-before",
"break-inside",
"caption-side" ,
"caret-color",
"@charset",
"clear" ,
"clip" ,
"color" ,
"columns" ,
"column-count" ,
"column-fill" ,
"column-gap" ,
"column-rule" ,
"column-rule-color" ,
"column-rule-style" ,
"column-rule-width" ,
"column-span" ,
"column-width" ,
"content" ,
"counter-increment" ,
"counter-reset" ,
"cursor" ,
"direction" ,
"display" ,
"empty-cells" ,
"flex",
"flex-basis",
"flex-direction",
"flex-flow",
"flex-grow",
"flex-shrink",
"flex-wrap",
"float" ,
"font",
"@font-face",
"font-family" ,
"font-feature-settings",
"@font-feature-values",
"font-kerning",
"font-language-override",
"font-size" ,
"font-size-adjust",
"font-stretch",
"font-style" ,
"font-synthesis",
"font-variant",
"font-variant-alternates",
"font-variant-caps",
"font-variant-east-asian",
"font-variant-ligatures",
"font-variant-numeric",
"font-variant-position",
"font-weight" ,
"grid",
"grid-area",
"grid-auto-columns",
"grid-auto-flow",
"grid-auto-rows",
"grid-column",
"grid-column-end",
"grid-column-gap",
"grid-column-start",
"grid-gap",
"grid-row",
"grid-row-end",
"grid-row-gap",
"grid-row-start",
"grid-template",
"grid-template-areas",
"grid-template-columns",
"grid-template-rows",
"hanging-punctuation",
"height" ,
"hyphens" ,
"image-rendering",
"@import",
"isolation",
"justify-content",
"@keyframes",
"left" ,
"letter-spacing" ,
"line-break",
"line-height" ,
"list-style" ,
"list-style-image" ,
"list-style-position" ,
"list-style-type" ,
"margin" ,
"margin-bottom" ,
"margin-left" ,
"margin-right" ,
"margin-top" ,
"max-height" ,
"max-width" ,
"@media",
"min-height" ,
"min-width" ,
"mix-blend-mode",
"object-fit",
"object-position",
"opacity" ,
"order",
"orphans" ,
"outline" ,
"outline-color" ,
"outline-offset",
"outline-style" ,
"outline-width" ,
"overflow" ,
"overflow-wrap",
"overflow-x" ,
"overflow-y" ,
"padding" ,
"padding-bottom" ,
"padding-left" ,
"padding-right" ,
"padding-top" ,
"page-break-after" ,
"page-break-before" ,
"page-break-inside" ,
"perspective" ,
"perspective-origin" ,
"pointer-events",
"position" ,
"quotes" ,
"resize",
"right" ,
"tab-size" ,
"table-layout" ,
"text-align" ,
"text-align-last" ,
"text-combine-upright",
"text-decoration" ,
"text-decoration-color" ,
"text-decoration-line" ,
"text-decoration-style" ,
"text-indent" ,
"text-justify",
"text-orientation",
"text-overflow",
"text-shadow" ,
"text-transform",
"text-underline-position",
"top" ,
"transform" ,
"transform-origin",
"transform-style" ,
"transition" ,
"transition-delay" ,
"transition-duration" ,
"transition-property" ,
"transition-timing-function" ,
"unicode-bidi" ,
"user-select",
"vertical-align" ,
"visibility" ,
"white-space" ,
"widows" ,
"width" ,
"word-break",
"word-spacing" ,
"word-wrap",
"writing-mode",
"z-index"

            });
        }
    }
    class HtmlElementsAndAttributes
    {

        public Dictionary<string, string[]> AttrDictionary = new Dictionary<string, string[]>();
        public Dictionary<string,string[]> AttrDict {get { return AttrDictionary; } }
        public HtmlElementsAndAttributes()
        {
            AttrDictionary.Add("Global", new string[] { "accesskey",
"class",
"contenteditable",
"data-*",
"dir",
"draggable",
"dropzone",
"hidden",
"id",
"lang",
"spellcheck",
"style",
"tabindex",
"title",
"translate"
});
             AttrDictionary.Add("a", new string[] {"download",
"href",
"hreflang",
"media",
"ping",
"referrerpolicy",
"rel",
"target",
"type" });
            AttrDictionary.Add("area", new string[] {"alt",
"coords",
"download",
"href",
"hreflang",
"media",
"rel",
"shape",
"target",
"type" });
            AttrDictionary.Add("audio", new string[] {"autoplay",
"controls",
"loop",
"muted",
"preload",
"src" });
            AttrDictionary.Add("base", new string[] {"href","target" });
            AttrDictionary.Add("bdo", new string[] {"dir" });
            AttrDictionary.Add("blockquote", new string[] {"cite" });
            AttrDictionary.Add("button", new string[] {"autofocus",
"disabled",
"form",
"formaction",
"formenctype",
"formmethod",
"formnovalidate",
"formtarget",
"name",
"type",
"value" });
            AttrDictionary.Add("canvas", new string[] {"height","width" });
            AttrDictionary.Add("col", new string[] {"span" });
            AttrDictionary.Add("colgroup", new string[] {"span" });
            AttrDictionary.Add("data", new string[] {"value" });
            AttrDictionary.Add("del", new string[] {"cite","datetime" });
            AttrDictionary.Add("details", new string[] {"open" });
            AttrDictionary.Add("dialog", new string[] {"open" });
            AttrDictionary.Add("embed", new string[] {"height","src","type","width" });
            AttrDictionary.Add("fieldset", new string[] {"disabled","form","name" });
            AttrDictionary.Add("form", new string[] {"action",
"autocomplete",
"enctype",
"method",
"name",
"novalidate",
"rel",
"target"  });
            AttrDictionary.Add("html", new string[] {"xmlns" });
            AttrDictionary.Add("iframe", new string[] {"allow",
"allowfullscreen",
"allowpaymentrequest",
"height",
"name",
"referrerpolicy",
"sandbox",
"src",
"srcdoc",
"width" });
            AttrDictionary.Add("img", new string[] {"alt",
"crossorigin",
"height",
"ismap",
"longdesc",
"referrerpolicy",
"sizes",
"src",
"srcset",
"usemap",
"width" });
            AttrDictionary.Add("input", new string[] {"accept",
"alt",
"autocomplete",
"autofocus",
"checked",
"dirname",
"disabled",
"form",
"formaction",
"formenctype",
"formmethod",
"formnovalidate",
"formtarget",
"height",
"list",
"max",
"maxlength",
"min",
"minlength",
"multiple",
"name",
"pattern",
"placeholder",
"readonly",
"required",
"size",
"src",
"step",
"type",
"value",
"width" });
            AttrDictionary.Add("ins", new string[] {"cite","datetime" });
            AttrDictionary.Add("label", new string[] {"for","form" });
            AttrDictionary.Add("li", new string[] {"value" });
            AttrDictionary.Add("link", new string[] {"crossorigin",
"href",
"hreflang",
"media",
"referrerpolicy",
"rel",
"sizes",
"title",
"type" });
            AttrDictionary.Add("map", new string[] {"name" });
            AttrDictionary.Add("meta", new string[] {"charset","content","http-equiv","name" });
            AttrDictionary.Add("meter", new string[] {"form",
"high",
"low",
"max",
"min",
"optimum",
"value" });
            AttrDictionary.Add("object", new string[] {"data",
"form",
"height",
"name",
"type",
"typemustmatch",
"usemap",
"width" });
            AttrDictionary.Add("ol", new string[] {"reversed","start","type" });
            AttrDictionary.Add("optgroup", new string[] {"disabled","label" });
            AttrDictionary.Add("option", new string[] { "disabled", "label","selected","value" });
            AttrDictionary.Add("output", new string[] {"for","form","name" });
            AttrDictionary.Add("param", new string[] {"name","value" });
            AttrDictionary.Add("progress", new string[] {"max","value" });
            AttrDictionary.Add("q", new string[] {"cite" });
            AttrDictionary.Add("script", new string[] {"async",
"charset",
"defer",
"src",
"type" });
            AttrDictionary.Add("select", new string[] {"autofocus",
"disable",
"form",
"multiple",
"name",
"required",
"size" });
            AttrDictionary.Add("source", new string[] {"src",
"srcset",
"media",
"sizes",
"type" });
            AttrDictionary.Add("style", new string[] {"media","type" });
            AttrDictionary.Add("svg", new string[] {"height","width" });
            AttrDictionary.Add("td", new string[] {"colspan","headers","rowspan" });
            AttrDictionary.Add("textarea", new string[] {"autofocus",
"cols",
"dirname",
"disabled",
"form",
"maxlength",
"name",
"placeholder",
"readonly",
"required",
"rows",
"wrap" });
            AttrDictionary.Add("th", new string[] { "abbr",
"colspan",
"headers",
"rowspan",
"scope"});
            AttrDictionary.Add("time", new string[] {"datetime" });
            AttrDictionary.Add("track", new string[] { "default",
"kind",
"label",
"src",
"srclang"   });
            AttrDictionary.Add("video", new string[] {"autoplay",
"controls",
"height",
"loop",
"muted",
"poster",
"preload",
"src",
"width" });
            AttrDictionary.Add("events", new string[]{"onabort",
  "onafterprint",
  "onbeforeprint",
  "onbeforeunload",
  "onblur",
  "oncanplay",
  "oncanplaythrough",
  "onchange",
  "onclick",
  "oncontextmenu",
  "oncopy",
  "oncuechange",
  "oncut",
  "ondblclick",
  "ondrag",
  "ondragend",
  "ondragenter",
  "ondragleave",
  "ondragover",
  "ondragstart",
  "ondrop",
  "ondurationchange",
  "onemptied",
  "onended",
  "onerror",
  "onfocus",
  "onhashchange",
  "oninput",
  "oninvalid",
  "onkeydown",
  "onkeypress",
  "onkeyup",
  "onload",
   "onloadeddata",
  "onloadedmetadat",
  "onloadstart",
  "onmousedown",
  "onmousemove",
  "onmouseout",
  "onmouseover",
  "onmouseup",
  "onmousewheel",
  "onoffline",
  "ononline",
  "onpagehide",
  "onpageshow",
  "onpaste",
  "onpause",
  "onplay",
  "onplaying",
  "onpopstate",
  "onprogress",
  "onratechange",
  "onreset",
  "onresize",
  "onscroll",
  "onsearch",
  "onseeked",
  "onseeking",
  "onselect",
  "onstalled",
  "onstorage",
  "onsubmit",
  "onsuspend",
  "ontimeupdate",
  "ontoggle",
  "onunload",
  "onvolumechange",
  "onwaiting",
  "onwheel" }); 

        }
    } 
    class HtmlElementsList
    {
       readonly List<string> elements = new List<string>();
        public List<string> HtmlElem { get { return elements; } }
        public HtmlElementsList()
        {
            elements.AddRange(new List<string>()
            {
               "<a>",
                 "<abbr>",
                  "<address>",
                    "<area>",
                    "<article>",
                       "<aside>",
                         "<audio>",
                           "<b>",
                              "<bdi>",
                               "<bdo>",
                             "<blockquote>",
"<br>",
"<button>",
"<canvas>",
"<caption>",
"<circle>",
"<cite>",
"<code>",
"<col>",
"<colgroup>",
"<command>",
"<datalist>",
"<dd>",
"<del>",
"<details>",
"<dfn>",
"<div>",
"<dl>",
"<dt>",
"<em>",
"<embed>",
"<fieldset>",
"<figcaption>",
"<figure>",
"<footer>",
"<form>",
"<h1>",
"<h2>",
"<h3>",
"<h4>",
"<h5>",
"<h6>",
"<header>",
"<hr>",
"<i>",
"<iframe>",
"<img>",
"<input>",
"<ins>",
"<kbd>",
"<keygen>",
"<label>",
"<legend>",
"<li>",
"<link>",
"<main>",
"<map",
"<mark>",
"<menu>",
"<meta>",
"<meter>",
"<nav>",
"<object>",
"<ol>>",
"<optgroup>",
"<option>",
"<output>",
"<p>",
"<param>",
"<polygon",
"<pre>",
"<progress>",
"<q>",
"<rect>",
"<rp>",
"<rt>",
"<ruby>",
"<s>",
"<samp>",
"<section>",
"<select>",
"<small>",
"<source>",
"<span>",
"<strong>",
"<style",
"<sub>",
"<summary>",
"<sup>",
"<svg>",
"<table>",
"<tbody>",
"<td>",
"<textarea>",
"<tfoot>",
"<th>",
"<thead>",
"<time>",
"<tr>",
"<track>",
"<u>",
"<ul>",
"<var>",
"<video",
"<wbr>"

            }
            );
        }



    }
    class HtmlAttributeList
    {
      readonly  List<string> AttrList = new List<string>();
        public List<string> HtmlAttr { get { return AttrList; } }
        public HtmlAttributeList()
        {
            AttrList.AddRange(new List<string>()
            {
                "accept",
"accept-charset",
"accesskey",
"action",
"alt",
"async",
"autocomplete",
"autofocus",
"autoplay",
"charset",
"cite",
"class",
"color",
"cols",
"colspan",
"content",
"contenteditable",
"controls",
"coords",
"data",
"data-*",
"datetime",
"default",
"defer",
"dir",
"dirname",
"download",
"draggable",
"enctype",
"for",
"form",
"formaction",
 "headers",
"height",
"hidden",
"high",
"href",
"lang",
"http-equiv",
"id",
"ismap",
"kind",
"label",
"lang",
"list",
"loop",
"low",
"max",
"maxlength",
"media",
"method",
"min",
"multiple",
"muted",
"name",
"novalidate",
"onabort",
"onafterprint",
"onbeforeprint",
"onbeforeunload",
"onblur",
"oncanplay",
"oncanplaythrough",
"onchange",
"onclick",
"oncontextmenu",
"oncopy",
"oncuechange",
"oncut",
"ondblclick",
"ondrag",
"ondragend",
"ondragenter",
"ondragleave",
"ondragover",
"ondragstart",
"ondrop",
"ondurationchange",
"onemptied",
"onended",
"onerror",
"onfocus",
"onhashchange",
"oninput",
"oninvalid",
"onkeydown",
"onkeypress",
"onkeyup",
"onload",
 "onloadeddata",
"onloadedmetadat",
"onloadstart",
"onmousedown",
"onmousemove",
"onmouseout",
"onmouseover",
"onmouseup",
"onmousewheel",
"onoffline",
"ononline",
"onpagehide",
"onpageshow",
"onpaste",
"onpause",
"onplay",
"onplaying",
"onpopstate",
"onprogress",
"onratechange",
"onreset",
"onresize",
"onscroll",
"onsearch",
"onseeked",
"onseeking",
"onselect",
"onstalled",
"onstorage",
"onsubmit",
"onsuspend",
"ontimeupdate",
"ontoggle",
"onunload",
"onvolumechange",
"onwaiting",
"onwheel",
"open",
"optimum",
"pattern",
"placeholder",
"poster",
"preload",
"readonly",
"rel",
"required",
"reversed",
"rows",
"rowspan",
"sandbox",
"scope",
"selected",
"shape",
"size",
"sizes",
"span",
"spellcheck",
"src",
"srcdoc",
"srclang",
"srcset",
"start",
"step",
"style",
"tabindex",
"target",
"title",
"translate",
"type",
"usemap",
"value",
"width",
"wrap"

            });
        }
    }
}
